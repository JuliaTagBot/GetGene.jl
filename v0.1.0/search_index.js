var documenterSearchIndex = {"docs":
[{"location":"#GetGene.jl-1","page":"GetGene.jl","title":"GetGene.jl","text":"","category":"section"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"GetGene.jl is a Julia package that queries the NIH NCBI's dbSNP API to retrieve gene information based on an input RefSNP ID (rsid). The package can currently get loci names for an array of rsids and retrieve other gene information for a single inputted rsid.","category":"page"},{"location":"#Installation-1","page":"GetGene.jl","title":"Installation","text":"","category":"section"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"This package requires Julia v0.7.0 or later. Start julia and use the ] key to switch to the package manager REPL and proceed as follows:","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"(v1.0) pkg> add GetGene","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"# machine information for this tutorial\nversioninfo()","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"Julia Version 1.1.0\nCommit 80516ca202 (2019-01-21 21:24 UTC)\nPlatform Info:\n  OS: macOS (x86_64-apple-darwin14.5.0)\n  CPU: Intel(R) Core(TM) i7-4850HQ CPU @ 2.30GHz\n  WORD_SIZE: 64\n  LIBM: libopenlibm\n  LLVM: libLLVM-6.0.1 (ORCJIT, haswell)","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"In the tutorial we will use the following packages:","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"using DataFrames, GetGene","category":"page"},{"location":"#Basic-usage-1","page":"GetGene.jl","title":"Basic usage","text":"","category":"section"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"The following commands can be used to create the test dataset. We will use the following rsids. ","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"rsids = [\"rs113980419\", \"rs17367504\", \n\"rs13107325\", \"rs2392929\", \"rs11824864\",\n\"78067132\", \"rs4909945\", \"Affx-4150211\",\n\"rs2270993\"]\ndf = DataFrame(rsids = rsids)\n9×1 DataFrame\n│ Row │ rsids        │\n│     │ String       │\n├─────┼──────────────┤\n│ 1   │ rs113980419  │\n│ 2   │ rs17367504   │\n│ 3   │ rs13107325   │\n│ 4   │ rs2392929    │\n│ 5   │ rs11824864   │\n│ 6   │ 78067132     │\n│ 7   │ rs4909945    │\n│ 8   │ Affx-4150211 │\n│ 9   │ rs2270993    │","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"The basic commands for MendelPlots.jl are   ","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"getgenes()\ngetgeneinfo()","category":"page"},{"location":"#getgenes()-1","page":"GetGene.jl","title":"getgenes()","text":"","category":"section"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"getgenes() gets the gene loci information from NCBI's dbSNP API. ","category":"page"},{"location":"#Inputs-1","page":"GetGene.jl","title":"Inputs","text":"","category":"section"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"getgenes() takes either an array of RefSNP IDs or a dataframe where one column has the rsids. The variable name by default is assumed to be named snpid. The variable name can be specified using the idvar keyword argument. ","category":"page"},{"location":"#Output-1","page":"GetGene.jl","title":"Output","text":"","category":"section"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"getgenes() outputs an array with the corresponding gene loci names of the inputted rsids. If the rsid is not in dbSNP, it will say the rsid was not in the database for that entry. If there was no gene associated with the rsid, it will say there is no gene listed for that entry.","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"For documentation of the getgenes function, type ?getgenes in Julia REPL.","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"getgenes","category":"page"},{"location":"#GetGene.getgenes","page":"GetGene.jl","title":"GetGene.getgenes","text":"getgenes(data::DataFrame; idvar::AbstractString)\n\nPosition arguments\n\ndata::DataFrame: A DataFrame containing a column with the Ref SNP IDs. By default, assumes that the variable name is \"snpid\". The variable name can be specified using the idvar keyword.\n\nKeyword arguments\n\nidvar::AbstractString: the variable name in the dataframe that specifies the Ref SNP ID (rsid).\n\ngetgenes(snps::AbstractArray)\n\nPosition arguments\n\nsnps::AbstractArray: Ref SNP IDs (rsid) to get loci names for. \n\nOutput\n\nReturns an array of gene loci associated to the Ref SNP IDs.\n\n\n\n\n\n","category":"function"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"getgenes(rsids)","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"9-element Array{String,1}:\n \"C1orf167\"             \n \"MTHFR\"                \n \"SLC39A8\"              \n \"No gene listed\"       \n \"SPI1\"                 \n \"No gene listed\"       \n \"MRVI1\"                \n \"snpid not in database\"\n \"PTPRJ\"","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"the rsid should start with the prefix rs, but if you omit the rs it will also work.","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"getgenes(\"13107325\")","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"\"SLC39A8\"","category":"page"},{"location":"#getgeneinfo()-1","page":"GetGene.jl","title":"getgeneinfo()","text":"","category":"section"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"getgeneinfo() gets the gene information of the inputted rsid from NCBI's dbSNP API. ","category":"page"},{"location":"#Inputs-2","page":"GetGene.jl","title":"Inputs","text":"","category":"section"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"getgenes() takes either an array of RefSNP IDs or a dataframe where one column has the rsids. The variable name by default is assumed to be named snpid. The variable name can be specified using the idvar keyword argument. ","category":"page"},{"location":"#Output-2","page":"GetGene.jl","title":"Output","text":"","category":"section"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"getgenes() outputs a dictionary of the corresponding rsids. If the rsid is not in dbSNP, it will return an error. If there was no gene associated with the rsid, it will say there is no gene information listed for that entry. It returns a dictionary of gene information associated with the Ref SNP ID. The dictionary keys are seq_id, annotation_release, gene_name, gene_id, gene_locus, gene_is_pseudo, and gene_orientation.","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"getgeneinfo(\"rs13107325\")","category":"page"},{"location":"#","page":"GetGene.jl","title":"GetGene.jl","text":"Dict{String,AbstractString} with 7 entries:\n  \"annotation_release\" => \"Homo sapiens Annotation Release 109\"\n  \"gene_name\"          => \"solute carrier family 39 member 8\"\n  \"gene_locus\"         => \"SLC39A8\"\n  \"gene_id\"            => \"64116\"\n  \"seq_id\"             => \"NC_000004.12\"\n  \"gene_is_pseudo\"     => \"0\"\n  \"gene_orientation\"   => \"1\"","category":"page"}]
}
